int* spiralOrder(int** matrix, int matrixSize, int* matrixColSize, int* returnSize) {
    
       int l = 1;//左边界
   int r = *matrixColSize;//右边界
   int u = 1;//上边界
   int b = matrixSize;//下边界

   int cnt = 0;

   int* result = (int*)malloc(sizeof(int)* matrixSize*(*matrixColSize));
   //阅读顺序    左->右   上->下   右->左   下->上

   while (1)
   {
       // 左->右
       for (int i = l - 1; i < r; i++)
       {
           result[cnt] = matrix[u-1][i];
           cnt++;
       }
       u++;        //    l=1 r=4 u=2 b=3
       if (u > b)
       {
           break;
       }

       // 上->下
       for (int i = u - 1; i < b; i++)
       {
           result[cnt] = matrix[i][r-1];
           cnt++;
       }
       r--;    //    l=1 r=3 u=2 b=3
       if (l > r)
       {
           break;
       }


       //  右->左
       for (int i = r - 1; i >= l-1; i--)
       {
           result[cnt] = matrix[b-1][i];
           cnt++;
       }
       b--;     //    l=1 r=3 u=2 b=2
       if (u > b)
       {
           break;
       }

       //  下->上
       for (int i = b - 1; i >= u-1; i--)
       {
           result[cnt] = matrix[i][l-1];
           cnt++;
       }
       l++;    //    l=1 r=3 u=2 b=2
       if (l > r)
       {
           break;
       }
   }
   * returnSize=cnt--;
   return result;
}
